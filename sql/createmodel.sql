CREATE TABLE deporte (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1 INCREMENT BY 1),
    nombre VARCHAR2(30 BYTE),
    color VARCHAR2(30 BYTE),
    imagen BLOB
);

ALTER TABLE
    deporte
ADD
    CONSTRAINT deporte_pk PRIMARY KEY (id);

CREATE TABLE chat (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1 INCREMENT BY 1),
    id_emisor NUMBER NOT NULL,
    id_receptor NUMBER NOT NULL
);

ALTER TABLE
    chat
ADD
    CONSTRAINT chat_pk PRIMARY KEY (id);

CREATE TABLE equipo (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1 INCREMENT BY 1),
    nombre VARCHAR2(30 BYTE)
);

ALTER TABLE
    equipo
ADD
    CONSTRAINT equipo_pk PRIMARY KEY (id);
    

CREATE TABLE detalle_equipo (
    id_equipo NUMBER NOT NULL,
    id_deporte NUMBER NOT NULL
);

CREATE TABLE estado_usuario (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1 INCREMENT BY 1),
    id_usuario NUMBER NOT NULL,
    id_membresia NUMBER NOT NULL,
    id_siguiente NUMBER NOT NULL,
    id_temporada NUMBER NOT NULL,
    puntos_ultimos NUMBER NOT NULL,
    p10 NUMBER NOT NULL,
    p5 NUMBER NOT NULL,
    p3 NUMBER NOT NULL,
    p0 NUMBER NOT NULL,
    incremento NUMBER NOT NULL
);

ALTER TABLE
    estado_usuario
ADD
    CONSTRAINT estado_usuario_pk PRIMARY KEY (id);

CREATE TABLE evento (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1 INCREMENT BY 1),
    id_jornada NUMBER NOT NULL,
    id_equipo_local NUMBER NOT NULL,
    id_equipo_visitante NUMBER NOT NULL,
    id_deporte NUMBER NOT NULL,
    puntuacion_local NUMBER,
    puntuacion_visitante NUMBER,
    fecha DATE,
    estado VARCHAR2(15 BYTE)
);

ALTER TABLE
    evento
ADD
    CONSTRAINT evento_pk PRIMARY KEY (id);

CREATE TABLE jornada (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1 INCREMENT BY 1),
    id_temporada NUMBER NOT NULL,
    nombre VARCHAR2(15 BYTE),
    fecha_inicio DATE,
    fecha_final DATE,
    estado VARCHAR2(15 BYTE)
);

ALTER TABLE
    jornada
ADD
    CONSTRAINT jornada_pk PRIMARY KEY (id);

CREATE TABLE membresia (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1 INCREMENT BY 1),
    nombre VARCHAR2(15 BYTE),
    precio NUMBER,
    alfa NUMBER
);

ALTER TABLE
    membresia
ADD
    CONSTRAINT membresia_pk PRIMARY KEY (id);

CREATE TABLE mensaje (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1 INCREMENT BY 1),
    id_chat NUMBER NOT NULL,
    emisor NUMBER,
    contenido VARCHAR2(300 BYTE),
    fecha_envio DATE
);

ALTER TABLE
    mensaje
ADD
    CONSTRAINT mensaje_pk PRIMARY KEY (id);

CREATE TABLE prediccion (
    id_evento NUMBER NOT NULL,
    id_usuario NUMBER NOT NULL,
    puntuacion_local NUMBER,
    puntuacion_visitante NUMBER,
    resultado NUMBER
);

CREATE TABLE temporada (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1 INCREMENT BY 1),
    nombre VARCHAR2(15 BYTE),
    fecha_inicio DATE,
    fecha_final DATE,
    estado VARCHAR2(15 BYTE)
);

ALTER TABLE
    temporada
ADD
    CONSTRAINT temporada_pk PRIMARY KEY (id);

CREATE TABLE usuario (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1 INCREMENT BY 1),
    username VARCHAR2(50 BYTE),
    correo VARCHAR2(50 BYTE),
    nombre VARCHAR2(30),
    apellido VARCHAR2(30),
    contraseÃ±a VARCHAR2(30),
    saldo NUMBER,
    fecha_nacimiento DATE,
    fecha_registro DATE,
    foto BLOB
);

ALTER TABLE
    usuario
ADD
    CONSTRAINT usuario_pk PRIMARY KEY (id);

CREATE UNIQUE INDEX username_i ON usuario (username);

ALTER TABLE
    chat
ADD
    CONSTRAINT chat_usuario_emisor_fk FOREIGN KEY (id_emisor) REFERENCES usuario (id);

ALTER TABLE
    detalle_equipo
ADD
    CONSTRAINT detalle_equipo_equipo_fk FOREIGN KEY (id_equipo) REFERENCES equipo (id);

ALTER TABLE
    detalle_equipo
ADD
    CONSTRAINT detalle_equipo_deporte_fk FOREIGN KEY (id_deporte) REFERENCES deporte (id);

ALTER TABLE
    chat
ADD
    CONSTRAINT chat_usuario_receptor_fk FOREIGN KEY (id_receptor) REFERENCES usuario (id);

ALTER TABLE
    evento
ADD
    CONSTRAINT evento_equipo_fk FOREIGN KEY (id_equipo_local) REFERENCES equipo (id);

ALTER TABLE
    evento
ADD
    CONSTRAINT evento_equipo_fkv2 FOREIGN KEY (id_equipo_visitante) REFERENCES equipo (id);

ALTER TABLE
    evento
ADD
    CONSTRAINT evento_jornada_fk FOREIGN KEY (id_jornada) REFERENCES jornada (id);

ALTER TABLE
    evento
ADD
    CONSTRAINT evento_deporte_fk FOREIGN KEY (id_deporte) REFERENCES deporte (id);

ALTER TABLE
    jornada
ADD
    CONSTRAINT jornada_temporada_fk FOREIGN KEY (id_temporada) REFERENCES temporada (id);

ALTER TABLE
    mensaje
ADD
    CONSTRAINT mensaje_chat_fk FOREIGN KEY (id_chat) REFERENCES chat (id);

ALTER TABLE
    prediccion
ADD
    CONSTRAINT prediccion_evento_fk FOREIGN KEY (id_evento) REFERENCES evento (id);

ALTER TABLE
    prediccion
ADD
    CONSTRAINT prediccion_usuario_fk FOREIGN KEY (id_usuario) REFERENCES usuario (id);

ALTER TABLE
    estado_usuario
ADD
    CONSTRAINT estado_usuario_membresia_fk FOREIGN KEY (id_membresia) REFERENCES membresia (id);

ALTER TABLE
    estado_usuario
ADD
    CONSTRAINT estado_usuario_siguiente_fk FOREIGN KEY (id_siguiente) REFERENCES membresia (id);

ALTER TABLE
    estado_usuario
ADD
    CONSTRAINT estado_usuario_temporada_fk FOREIGN KEY (id_temporada) REFERENCES temporada (id);

ALTER TABLE
    estado_usuario
ADD
    CONSTRAINT estado_usuario_usuario_fk FOREIGN KEY (id_usuario) REFERENCES usuario (id);

-- INSERTS
INSERT INTO
    usuario
VALUES
    (
        NULL,
        'admin',
        'admin@quiniela.mia.com',
        'admin',
        'admin',
        'adminadmin',
        10000,
        TO_DATE('2001/01/26', 'yyyy/mm/dd'),
        TO_DATE('2021/05/01', 'yyyy/mm/dd'),
        utl_raw.cast_to_raw('')
    );

INSERT INTO
    membresia
VALUES
    (NULL, 'ninguna', 0, 0);

INSERT INTO
    membresia
VALUES
    (NULL, 'bronze', 150, 1);

INSERT INTO
    membresia
VALUES
    (NULL, 'silver', 450, 2);

INSERT INTO
    membresia
VALUES
    (NULL, 'gold', 900, 3);


 EXECUTE new_season;

DBMS_SCHEDULER.CREATE_JOB (
   job_name           =>  'renovate_season',
   job_type           =>  'STORED_PROCEDURE',
   job_action         =>  'OPS.new_season',
   start_date         =>  SYSDATE + 7,
   repeat_interval    =>  'FREQ=MONTHLY;INTERVAL=1',
   job_class          =>  'batch_update_jobs');

DBMS_SCHEDULER.CREATE_JOB (
   job_name           =>  'renovate_period',
   job_type           =>  'STORED_PROCEDURE',
   job_action         =>  'OPS.new_period',
   start_date         =>  SYSDATE + 7,
   repeat_interval    =>  'FREQ=WEEKLY;INTERVAL=1',
   job_class          =>  'batch_update_jobs');

COMMIT WORK;


